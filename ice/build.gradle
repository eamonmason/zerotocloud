import zerotocloud.*
import org.apache.tools.ant.filters.*
import groovy.json.JsonSlurper

def s3BillingBucket = ""
def s3ICEBucket = ""

if (!hasProperty("billingbucket") || !hasProperty("icebucket")) {
  println("You need to provide 'billingbucket' and 'icebucket properties, use '-P'") 
}
else {
  s3BillingBucket = billingbucket
  s3ICEBucket = icebucket
}

def readerDir = new File(buildDir, "ice-reader")
def workingDir = new File(buildDir, "ice-working-directory")

task getAWSConfig {
  def awsConfig = new File(System.properties['user.home'], "/.aws/config")
  file(awsConfig).withReader { reader -> 
    def userProps = new Properties() 
    userProps.load(reader) 
    //userProps.remove("[default]")
    logger.info("AWS properties: " + userProps)
    ext.awsSecretAccessKey = userProps.get("aws_secret_access_key")
    ext.awsAccessKeyId = userProps.get("aws_access_key_id")
    ext.awsRegion = userProps.get("region")    
  } 
  logger.info("AWS Secret: " + ext.awsSecretAccessKey + " Access Key: " + ext.awsAccessKeyId + " Region: " + ext.awsRegion)
}


task cloneRepo(type: CloneRepo) {
  dependsOn 'getAWSConfig'

    logger.info('Cloning ice from github...')
    repository = 'https://github.com/Netflix/ice.git'
}

task accNum {
  dependsOn 'cloneRepo'
  
  def json = new JsonSlurper()    
  def result = json.parseText("http://169.254.169.254/latest/dynamic/instance-identity/document/".toURL().text)
  ext.id = result.accountId

}

// Creates ice.writer properties

task copyPropertiesFile (type: Copy) {
  dependsOn 'accNum'


    logger.info('Creating ice.properties...')

    from new File(cloneRepo.gitDir, "src/java/sample.properties") 
    into new File(cloneRepo.gitDir, 'src/java')
    filter{
        line -> line.contains('ice.processor=') ? 'ice.processor=true' : line     
    }
    filter {
          line -> line.contains('ice.reader=') ? 'ice.reader=false' : line     
    }
    filter {
      line -> line.contains('ice.billing_s3bucketname=') ? 'ice.billing_s3bucketname=' + s3BillingBucket : line         
    }
    filter {
      line -> line.contains('ice.work_s3bucketname=') ? 'ice.work_s3bucketname=' + s3ICEBucket : line      
    }
    filter {
      line -> line.contains('ice.processor.localDir=') ? 'ice.processor.localDir=' + workingDir : line     
    }
    filter {
      line -> line.contains('ice.reader.localDir=') ? 'ice.reader.localDir=' + readerDir : line    
    }
    filter {
      line -> line.contains('ice.account.account1=') ? 'ice.account.account1=' + accNum.id : line    
    }
    
    rename { String fileName ->
      fileName.replace("sample.properties", "ice.properties")
    }
  
}


// Make directories
task makeDirectories {
  dependsOn 'copyPropertiesFile'
  readerDir.mkdir()
  workingDir.mkdir()
}


// Populate appropriate sections

task patchRepo {    
    dependsOn  'makeDirectories'  
    
}


// install java - do i really need to do this with zerotocloud though?
//
        
//install java
//set JAVA_HOME
/*
ospackage {
    from(cloneRepo) {
        into('/opt/aminator')
        user = 'ubuntu'
        permissionGroup = 'ubuntu'
    }
    requires('java')    
    //might need to do an apt-get
    postInstall('echo export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64 >> ~/.profile')    
    // maybe need to chown ice-reader and working dir
    //    postInstall('chown -R ubuntu:ubuntu ice-reader')

}
*/
//run ice grails wrapper
//$ICE_DIR/grailsw wrapper

//
//configure ice.properties
//  set reader true and processor false in ice.properties
//create reader AMI

